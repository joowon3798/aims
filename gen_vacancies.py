# -*- coding: utf-8 -*-
"""gen_vacancies.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bXOXWa0Jf0kmouNf6tsZTJUGj3Eet6ET
"""

from random import choices

image_w_defects = open('/content/drive/My Drive/pristineMoS2/GHI_image.xyz', 'w+')
SV1 = open('/content/drive/My Drive/pristineMoS2/GHI_1vac.xyz', 'w+')
SV2 = open('/content/drive/My Drive/pristineMoS2/GHI_2vac.xyz', 'w+')

# Start the count
numLines = -2

# Percentage of vacancies on chalcogen site
pop = [0, 1.1, 1.2, 2]
prob = [0.8, 0.08, 0, 0.05]

# Variable indicating whether to create SV1 on top, SV1 on bottom, or SV2, or none
defType = 0

with open('/content/drive/My Drive/pristineMoS2/MoS2_incostem_33_19_1_2.xyz', 'r') as input:
  for line in input:
    if line[0:2]=='42':
      image_w_defects.write(line)
      # Determine what defect will be created on next two chalc. sites
      defType = choices(pop, prob)
      print(defType)
    elif line[0:2]=='16':
      layer = numLines%3
      # Case1. No defect
      if defType[0]==0:
        image_w_defects.write(line)
        # Case2. SV1 on first layer
      elif defType[0]==1.1:
        if layer==1: # Generate single vacancy and ignore the other layer
          SV1.write(line)
        elif layer==2:
          image_w_defects.write(line)
      # Case3. SV1 on second layer
      elif defType[0]==1.2:
        if layer==1:
          image_w_defects.write(line)
        elif layer==2:
          SV1.write(line)
      # Case4. SV2
      elif defType[0]==2: # Doesn't matter which layer it is, as we need all coordinates
        SV2.write(line)
    else:
      image_w_defects.write(line)
      SV1.write(line)
      SV2.write(line)
    numLines += 1

SV1.close()
SV2.close()
image_w_defects.close()
